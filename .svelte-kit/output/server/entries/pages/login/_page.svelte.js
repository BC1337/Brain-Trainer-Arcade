import { c as create_ssr_component, a as subscribe, v as validate_component, b as add_attribute } from "../../../chunks/ssr.js";
import { L as Layout } from "../../../chunks/Layout.js";
import { T as Toast } from "../../../chunks/Toast.js";
import { w as writable } from "../../../chunks/index2.js";
const css = {
  code: ".login-container.svelte-1bn4v9o.svelte-1bn4v9o{min-height:100vh;display:flex;align-items:center;justify-content:center;padding:6rem 1rem 1rem;transition:background-color 0.3s ease}.login-box.svelte-1bn4v9o.svelte-1bn4v9o{color:#000;padding:2rem;border-radius:0.5rem;box-shadow:0 2px 8px rgba(0, 0, 0, 0.2);width:100%;max-width:28rem;background-color:#f0f0f0}.login-box.svelte-1bn4v9o h2.svelte-1bn4v9o{font-size:1.75rem;font-weight:bold;margin-bottom:1.5rem;text-align:center}.input-group.svelte-1bn4v9o.svelte-1bn4v9o{margin-bottom:1.5rem}label.svelte-1bn4v9o.svelte-1bn4v9o{display:block;margin-bottom:0.25rem}input.svelte-1bn4v9o.svelte-1bn4v9o{width:100%;padding:0.75rem;border-radius:0.375rem;border:1px solid #ccc;background-color:#fff;color:#000;outline:none;transition:border 0.3s ease}input.svelte-1bn4v9o.svelte-1bn4v9o:focus{border-color:#f0a500;box-shadow:0 0 0 2px rgba(240, 165, 0, 0.2)}input.invalid.svelte-1bn4v9o.svelte-1bn4v9o{border-color:#dc2626;box-shadow:0 0 0 2px rgba(220, 38, 38, 0.2)}button.svelte-1bn4v9o.svelte-1bn4v9o{width:100%;padding:0.75rem;background-color:#16a34a;color:white;border:none;border-radius:0.375rem;font-size:1rem;cursor:pointer;transition:background-color 0.2s ease}button.svelte-1bn4v9o.svelte-1bn4v9o:hover{background-color:#15803d}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import Layout from '../../layouts/Layout.svelte';\\n  import Toast from '../../lib/components/Toast.svelte';\\n  import { writable } from 'svelte/store';\\n  import { onMount } from 'svelte';\\n\\n  let email = '';\\n  let password = '';\\n  let emailValid = true;\\n  let passwordValid = true;\\n\\n  const toastMessage = writable({ message: '', type: '' });\\n\\n  // Detect and apply theme on mount\\n  onMount(() => {\\n    if (!localStorage.getItem('theme')) {\\n      document.body.classList.add('dark-mode'); // Default to dark mode if not set\\n    }\\n  });\\n\\n  const validate = () => {\\n    emailValid = !!email;\\n    passwordValid = !!password;\\n  };\\n\\n  const handleSubmit = () => {\\n    validate();\\n\\n    if (!emailValid || !passwordValid) {\\n      toastMessage.set({ message: 'Please fill in all fields.', type: 'error' });\\n      setTimeout(() => toastMessage.set({ message: '', type: '' }), 1650);\\n      return;\\n    }\\n\\n    toastMessage.set({ message: 'Logging in...', type: 'success' });\\n    console.log('Form submitted:', { email, password });\\n\\n    setTimeout(() => toastMessage.set({ message: '', type: '' }), 1650);\\n  };\\n<\/script>\\n\\n<style>\\n  /* General styles */\\n  .login-container {\\n    min-height: 100vh;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 6rem 1rem 1rem;\\n    transition: background-color 0.3s ease;\\n  }\\n\\n  .login-box {\\n    color: #000;\\n    padding: 2rem;\\n    border-radius: 0.5rem;\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\\n    width: 100%;\\n    max-width: 28rem;\\n    background-color: #f0f0f0;\\n  }\\n\\n  .login-box h2 {\\n    font-size: 1.75rem;\\n    font-weight: bold;\\n    margin-bottom: 1.5rem;\\n    text-align: center;\\n  }\\n\\n  .input-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  label {\\n    display: block;\\n    margin-bottom: 0.25rem;\\n  }\\n\\n  input {\\n    width: 100%;\\n    padding: 0.75rem;\\n    border-radius: 0.375rem;\\n    border: 1px solid #ccc;\\n    background-color: #fff;\\n    color: #000;\\n    outline: none;\\n    transition: border 0.3s ease;\\n  }\\n\\n  input:focus {\\n    border-color: #f0a500;\\n    box-shadow: 0 0 0 2px rgba(240, 165, 0, 0.2);\\n  }\\n\\n  input.invalid {\\n    border-color: #dc2626;\\n    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.2);\\n  }\\n\\n  button {\\n    width: 100%;\\n    padding: 0.75rem;\\n    background-color: #16a34a;\\n    color: white;\\n    border: none;\\n    border-radius: 0.375rem;\\n    font-size: 1rem;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease;\\n  }\\n\\n  button:hover {\\n    background-color: #15803d;\\n  }\\n\\n  .error-text {\\n    color: #dc2626;\\n    font-size: 0.875rem;\\n    text-align: center;\\n    margin-bottom: 1rem;\\n  }\\n\\n  /* Dark Mode Styles */\\n  body.dark-mode .login-container {\\n    background-color: #111;\\n  }\\n\\n  body.dark-mode .login-box {\\n    background-color: #222;\\n    color: #fff;\\n  }\\n\\n  body.dark-mode input {\\n    background-color: #333;\\n    color: #fff;\\n    border-color: #555;\\n  }\\n\\n  body.dark-mode input:focus {\\n    border-color: #f0a500;\\n    box-shadow: 0 0 0 2px rgba(240, 165, 0, 0.5);\\n  }\\n\\n  body.dark-mode input.invalid {\\n    border-color: #dc2626;\\n    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.5);\\n  }\\n</style>\\n\\n<Layout showThemeToggle={true}>\\n  <div class=\\"login-container\\">\\n    <div class=\\"login-box\\">\\n      <h2>Login</h2>\\n\\n      <div class=\\"input-group\\">\\n        <label for=\\"email\\">Username</label>\\n        <input\\n          type=\\"email\\"\\n          id=\\"email\\"\\n          bind:value={email}\\n          class:invalid={!emailValid}\\n          placeholder=\\"Enter your email\\"\\n        />\\n      </div>\\n\\n      <div class=\\"input-group\\">\\n        <label for=\\"password\\">Password</label>\\n        <input\\n          type=\\"password\\"\\n          id=\\"password\\"\\n          bind:value={password}\\n          class:invalid={!passwordValid}\\n          placeholder=\\"Enter your password\\"\\n        />\\n      </div>\\n\\n      <button on:click={handleSubmit}>Login</button>\\n    </div>\\n  </div>\\n\\n  <Toast message={$toastMessage.message} type={$toastMessage.type} />\\n</Layout>\\n"],"names":[],"mappings":"AA2CE,8CAAiB,CACf,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,UAAU,CAAE,gBAAgB,CAAC,IAAI,CAAC,IACpC,CAEA,wCAAW,CACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,gBAAgB,CAAE,OACpB,CAEA,yBAAU,CAAC,iBAAG,CACZ,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,MACd,CAEA,0CAAa,CACX,aAAa,CAAE,MACjB,CAEA,mCAAM,CACJ,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,OACjB,CAEA,mCAAM,CACJ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,OAAO,CAChB,aAAa,CAAE,QAAQ,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAAC,IAAI,CAAC,IAC1B,CAEA,mCAAK,MAAO,CACV,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC7C,CAEA,KAAK,sCAAS,CACZ,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAC7C,CAEA,oCAAO,CACL,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,OAAO,CAChB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,QAAQ,CACvB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,gBAAgB,CAAC,IAAI,CAAC,IACpC,CAEA,oCAAM,MAAO,CACX,gBAAgB,CAAE,OACpB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $toastMessage, $$unsubscribe_toastMessage;
  let email = "";
  let password = "";
  const toastMessage = writable({ message: "", type: "" });
  $$unsubscribe_toastMessage = subscribe(toastMessage, (value) => $toastMessage = value);
  $$result.css.add(css);
  $$unsubscribe_toastMessage();
  return `${validate_component(Layout, "Layout").$$render($$result, { showThemeToggle: true }, {}, {
    default: () => {
      return `<div class="login-container svelte-1bn4v9o"><div class="login-box svelte-1bn4v9o"><h2 class="svelte-1bn4v9o" data-svelte-h="svelte-bhb3ah">Login</h2> <div class="input-group svelte-1bn4v9o"><label for="email" class="svelte-1bn4v9o" data-svelte-h="svelte-1i4bxqm">Username</label> <input type="email" id="email" placeholder="Enter your email" class="${["svelte-1bn4v9o", ""].join(" ").trim()}"${add_attribute("value", email, 0)}></div> <div class="input-group svelte-1bn4v9o"><label for="password" class="svelte-1bn4v9o" data-svelte-h="svelte-pepa0a">Password</label> <input type="password" id="password" placeholder="Enter your password" class="${["svelte-1bn4v9o", ""].join(" ").trim()}"${add_attribute("value", password, 0)}></div> <button class="svelte-1bn4v9o" data-svelte-h="svelte-148y0bp">Login</button></div></div> ${validate_component(Toast, "Toast").$$render(
        $$result,
        {
          message: $toastMessage.message,
          type: $toastMessage.type
        },
        {},
        {}
      )}`;
    }
  })}`;
});
export {
  Page as default
};
