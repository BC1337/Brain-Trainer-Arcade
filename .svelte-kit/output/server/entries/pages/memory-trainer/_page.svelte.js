import { c as create_ssr_component, v as validate_component, e as escape } from "../../../chunks/ssr.js";
import { L as Layout } from "../../../chunks/Layout.js";
const css = {
  code: ".content-wrapper.svelte-s9wkup.svelte-s9wkup{display:flex;flex-direction:column;align-items:center;margin-top:50px}.description.svelte-s9wkup.svelte-s9wkup{text-align:center;max-width:600px;padding:10px;border-radius:10px;color:#f0a500;box-shadow:0 0 10px rgba(0, 0, 0, 0.2);margin-bottom:-100px}.description.svelte-s9wkup p.svelte-s9wkup:first-child{font-size:24px;margin-bottom:10px}.description.svelte-s9wkup p.svelte-s9wkup:last-child{font-size:16px}.game-container.svelte-s9wkup.svelte-s9wkup{display:flex;flex-direction:column;align-items:center;margin-bottom:20px}.memory-container.svelte-s9wkup.svelte-s9wkup{display:flex;justify-content:center;align-items:center;height:80vh}.card.svelte-s9wkup.svelte-s9wkup{width:450px;height:300px;background-color:#333;border-radius:10px;box-shadow:0 0 10px rgba(255, 255, 255, 0.3);display:flex;flex-direction:column;align-items:center;padding:20px;position:relative}.random-word.svelte-s9wkup.svelte-s9wkup{font-size:24px;font-weight:bold;margin-top:auto;margin-bottom:20px;text-align:center}.button-container.svelte-s9wkup.svelte-s9wkup{margin-top:auto;display:flex}button.svelte-s9wkup.svelte-s9wkup{padding:8px 16px;margin:5px;border:1px solid transparent;border-radius:5px;cursor:pointer;transition:all 0.3s ease}button.seen.svelte-s9wkup.svelte-s9wkup{background-color:rgba(188, 22, 22, 0.7);color:#fff}button.new.svelte-s9wkup.svelte-s9wkup{background-color:rgba(3, 139, 3, 0.7);color:#fff}button.svelte-s9wkup.svelte-s9wkup:hover{border-color:#ccc;box-shadow:0 0 5px rgba(0, 0, 0, 0.3)}.lives.svelte-s9wkup.svelte-s9wkup{margin-top:auto;text-align:center;font-size:20px;font-weight:bold}.correct-guesses.svelte-s9wkup.svelte-s9wkup{margin-top:auto;text-align:center;font-size:20px;font-weight:bold}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<!-- this is the word guessing game, NOT SIMON SAYS this is an example of a bad name for a game lol-->\\n<script>\\n    // Import necessary libraries and define variables\\n    import { onMount } from 'svelte';\\n    import Layout from \\"../../layouts/Layout.svelte\\";\\n    import Modal from '../../lib/components/Modal.svelte';\\n    import wordSets from './wordSets.js';\\n\\n    // Initialize variables\\n    let currentWordSet = {};\\n    let lives = 3;\\n    let correctGuesses = 0;\\n    let randomWord = \\"\\";\\n    let wordStatus = {}; // Track the status of each word\\n    let wordColor = \\"white\\"; // Initial color of the word\\n    let previousColor = \\"\\"; // Store the previously used color\\n    let showModal = false;\\n\\n    // Function to select a random word set\\n    const selectRandomWordSet = () => {\\n        currentWordSet = wordSets[Math.floor(Math.random() * wordSets.length)];\\n    };\\n\\n    // Function to generate a random word from the selected word set\\n    const generateRandomWord = () => {\\n        randomWord = currentWordSet.words[Math.floor(Math.random() * currentWordSet.words.length)];\\n        // Change the color of the word\\n        wordColor = getRandomColor();\\n    };\\n\\n    // Function to handle click on \\"Seen\\" button\\n    const handleClickSeen = () => {\\n        if (wordStatus[randomWord] === \\"seen\\") {\\n            correctGuesses++;\\n        } else {\\n            lives--;\\n        }\\n        if (lives === 0) {\\n            showModal = true;\\n        } else {\\n            wordStatus[randomWord] = \\"seen\\";\\n            generateRandomWord();\\n        }\\n    };\\n\\n    // Function to handle click on \\"New\\" button\\n    const handleClickNew = () => {\\n        if (wordStatus[randomWord] !== \\"seen\\") {\\n            correctGuesses++;\\n        } else {\\n            lives--;\\n        }\\n        if (lives === 0) {\\n            showModal = true;\\n        } else {\\n            wordStatus[randomWord] = \\"seen\\";\\n            generateRandomWord();\\n        }\\n    };\\n\\n    // Function to get a random color for the word\\n    const getRandomColor = () => {\\n        const colors = [\\"#ff0066\\", \\"#ff6600\\", \\"#cc33ff\\", \\"#33cc33\\", \\"#0099cc\\", \\"#ffcc00\\"];\\n        // Remove the previous color from the array if it exists\\n        const index = colors.indexOf(previousColor);\\n        if (index !== -1) {\\n            colors.splice(index, 1);\\n        }\\n        // Select a random color from the modified array\\n        const newColor = colors[Math.floor(Math.random() * colors.length)];\\n        // Update the previous color for the next iteration\\n        previousColor = newColor;\\n        return newColor;\\n    };\\n\\n    // Call the function to select a random word set on mount\\n    onMount(() => {\\n        selectRandomWordSet();\\n        generateRandomWord();\\n        currentWordSet.words.forEach(word => {\\n            wordStatus[word] = \\"new\\";\\n        });\\n    });\\n<\/script>\\n\\n<head>\\n    <title>Verbal Memory Trainer - Improve Your Recall Skills!</title>\\n    <meta name=\\"description\\" content=\\"Enhance your verbal memory with this online trainer. Exercise your ability to recall words, phrases, and sentences. Challenge yourself with various levels of difficulty and track your progress over time.\\">\\n    <meta name=\\"keywords\\" content=\\"verbal memory trainer, memory improvement, memory game, recall game, memory exercise, word recall, phrase recall, sentence recall, cognitive training, brain game\\">\\n    <meta name=\\"BC1337\\" content=\\"BC\\">\\n    <!-- Add more meta tags as needed -->\\n  </head>\\n  \\n\\n  <Layout>\\n    <div class=\\"content-wrapper\\" role=\\"main\\">\\n        <!-- Description -->\\n        <section class=\\"description\\">\\n            <h2>How to Play</h2>\\n            <p>Remember the name of the word displayed and make the correct choices.</p>\\n        </section>\\n\\n        <!-- Memory Game content -->\\n        <section class=\\"game-container\\">\\n            <div class=\\"memory-container\\">\\n                <div class=\\"card\\">\\n                    <!-- Apply the color style directly to the random word -->\\n                    <h3 class=\\"random-word\\" style=\\"color: {wordColor}; text-shadow: 0 0 10px {wordColor};\\">{randomWord}</h3>\\n                    <div class=\\"button-container\\">\\n                        <button on:click={handleClickSeen} class=\\"seen\\">Seen</button>\\n                        <button on:click={handleClickNew} class=\\"new\\">New</button>\\n                    </div>\\n                    <p class=\\"lives\\">Lives: {lives}</p>\\n                    <p class=\\"correct-guesses\\">Correct Guesses: {correctGuesses}</p>\\n                </div>\\n            </div>\\n            {#if showModal}\\n                <Modal correctGuesses={correctGuesses} onClose={() => showModal = false}/>\\n            {/if}\\n        </section>\\n    </div>\\n</Layout>\\n\\n<style>\\n.content-wrapper {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 50px; /* Adjust the margin to move the content down */\\n}\\n\\n.description {\\n    text-align: center;\\n    max-width: 600px;\\n    padding: 10px;\\n    border-radius: 10px;\\n    color: #f0a500;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n    margin-bottom: -100px; /* Add margin bottom to create space between description and game */\\n}\\n\\n.description p:first-child {\\n    font-size: 24px;\\n    margin-bottom: 10px;\\n}\\n\\n.description p:last-child {\\n    font-size: 16px;\\n}\\n\\n.game-container {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-bottom: 20px; /* Add margin bottom to create space between description and game */\\n}\\n\\n.memory-container {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 80vh;\\n}\\n\\n.card {\\n    width: 450px;\\n    height: 300px;\\n    background-color: #333;\\n    border-radius: 10px;\\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: 20px;\\n    position: relative;\\n}\\n\\n.random-word {\\n    font-size: 24px;\\n    font-weight: bold;\\n    margin-top: auto;\\n    margin-bottom: 20px;\\n    text-align: center;\\n}\\n\\n.button-container {\\n    margin-top: auto;\\n    display: flex;\\n}\\n\\nbutton {\\n    padding: 8px 16px;\\n    margin: 5px;\\n    border: 1px solid transparent;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    transition: all 0.3s ease;\\n}\\n\\nbutton.seen {\\n    background-color: rgba(188, 22, 22, 0.7);\\n    color: #fff;\\n}\\n\\nbutton.new {\\n    background-color: rgba(3, 139, 3, 0.7);\\n    color: #fff;\\n}\\n\\nbutton:hover {\\n    border-color: #ccc;\\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\\n}\\n\\n.lives {\\n    margin-top: auto;\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold;\\n}\\n\\n.correct-guesses {\\n    margin-top: auto;\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold;\\n}\\n\\n</style>\\n"],"names":[],"mappings":"AA4HA,4CAAiB,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,IAChB,CAEA,wCAAa,CACT,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACvC,aAAa,CAAE,MACnB,CAEA,0BAAY,CAAC,eAAC,YAAa,CACvB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IACnB,CAEA,0BAAY,CAAC,eAAC,WAAY,CACtB,SAAS,CAAE,IACf,CAEA,2CAAgB,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,IACnB,CAEA,6CAAkB,CACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IACZ,CAEA,iCAAM,CACF,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC7C,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QACd,CAEA,wCAAa,CACT,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,MAChB,CAEA,6CAAkB,CACd,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IACb,CAEA,kCAAO,CACH,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC7B,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IACzB,CAEA,MAAM,iCAAM,CACR,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IACX,CAEA,MAAM,gCAAK,CACP,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,KAAK,CAAE,IACX,CAEA,kCAAM,MAAO,CACT,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACzC,CAEA,kCAAO,CACH,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IACjB,CAEA,4CAAiB,CACb,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IACjB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let lives = 3;
  let correctGuesses = 0;
  let randomWord = "";
  let wordColor = "white";
  $$result.css.add(css);
  return `  <head data-svelte-h="svelte-72cr83"><title>Verbal Memory Trainer - Improve Your Recall Skills!</title> <meta name="description" content="Enhance your verbal memory with this online trainer. Exercise your ability to recall words, phrases, and sentences. Challenge yourself with various levels of difficulty and track your progress over time."> <meta name="keywords" content="verbal memory trainer, memory improvement, memory game, recall game, memory exercise, word recall, phrase recall, sentence recall, cognitive training, brain game"> <meta name="BC1337" content="BC"> </head> ${validate_component(Layout, "Layout").$$render($$result, {}, {}, {
    default: () => {
      return `<div class="content-wrapper svelte-s9wkup" role="main"> <section class="description svelte-s9wkup" data-svelte-h="svelte-uellyu"><h2>How to Play</h2> <p class="svelte-s9wkup">Remember the name of the word displayed and make the correct choices.</p></section>  <section class="game-container svelte-s9wkup"><div class="memory-container svelte-s9wkup"><div class="card svelte-s9wkup"> <h3 class="random-word svelte-s9wkup" style="${"color: " + escape(wordColor, true) + "; text-shadow: 0 0 10px " + escape(wordColor, true) + ";"}">${escape(randomWord)}</h3> <div class="button-container svelte-s9wkup"><button class="seen svelte-s9wkup" data-svelte-h="svelte-15cg0hs">Seen</button> <button class="new svelte-s9wkup" data-svelte-h="svelte-1enkkar">New</button></div> <p class="lives svelte-s9wkup">Lives: ${escape(lives)}</p> <p class="correct-guesses svelte-s9wkup">Correct Guesses: ${escape(correctGuesses)}</p></div></div> ${``}</section></div>`;
    }
  })}`;
});
export {
  Page as default
};
